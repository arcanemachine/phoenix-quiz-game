<.list_show>
  <:item :if={false} label="Image">
    <%= @card.image || null_value_content() %>
  </:item>
  <:item label="Question">
    <%= @card.question %>
  </:item>
  <:item label="Format">
    <%= QuizGameWeb.Support.Atom.to_human_friendly_string(@card.format) %>
  </:item>
  <:item :if={@card.format == :multiple_choice} label="Choices">
    <ol class="list">
      <li>
        <%= @card.choice_1 %>
      </li>
      <li>
        <%= @card.choice_2 %>
      </li>
      <li>
        <%= @card.choice_3 %>
      </li>
      <li>
        <%= @card.choice_4 %>
      </li>
    </ol>
  </:item>
  <:item label="Answer">
    <%= if @card.format == :multiple_choice do %>
      <%= Map.get(@card, String.to_atom("choice_#{@card.answer}")) %>
    <% else %>
      <%= @card.answer %>
    <% end %>
  </:item>
</.list_show>

<.action_links>
  <.action_links_item kind="edit">
    <.link navigate={route(:quizzes_cards, :edit, quiz_id: @card.quiz.id, card_id: @card.id)}>
      Edit this card
    </.link>
  </.action_links_item>
  <.action_links_item kind="delete">
    <.link
      phx-click="delete"
      class="!text-error"
      data-confirm="Are you sure you want to delete this card?"
    >
      Delete this card
    </.link>
  </.action_links_item>
  <.action_links_spacer />
  <.action_links_item kind="back">
    <.link patch={route(:quizzes_cards, :index, quiz_id: @card.quiz.id)}>
      Return to card list
    </.link>
  </.action_links_item>
  <.action_links_item kind="back-2">
    <.link href={route(:quizzes, :show, quiz_id: @card.quiz.id)}>
      Return to quiz
    </.link>
  </.action_links_item>
</.action_links>

<.modal
  :if={@live_action == :edit}
  id="card-modal"
  show
  on_cancel={JS.patch(route(:quizzes_cards, :show, quiz_id: @card.quiz.id, card_id: @card.id))}
>
  <.live_component
    module={QuizGameWeb.Quizzes.CardLive.FormComponent}
    id={@card.id}
    title="Edit Card"
    action={@live_action}
    card={@card}
    patch={route(:quizzes_cards, :show, quiz_id: @card.quiz.id, card_id: @card.id)}
  />
</.modal>
